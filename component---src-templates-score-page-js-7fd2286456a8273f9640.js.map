{"version":3,"sources":["webpack:///./src/components/SpoilerButton.js","webpack:///./src/components/YoutubeLink.js","webpack:///./src/components/Score.js","webpack:///./src/components/ViewsyncLink.js","webpack:///./src/components/ScoreTable.js","webpack:///./src/components/ScoreFootnotes.js","webpack:///./src/components/ResultsRow.js","webpack:///./src/components/ResultsTable.js","webpack:///./src/components/ImageHeader.js","webpack:///./src/templates/ScorePage.js"],"names":["SpoilerButton","useContext","SpoilerContext","showSpoilers","toggleSpoilers","Button","variant","onClick","YoutubeLink","children","videoId","href","Score","day","allNotes","place","score","youtube","notes","noteIndex","findIndex","n","className","repeat","ViewsyncLink","data","youtubeLinks","map","node","days","filter","Boolean","length","link","join","ScoreTable","rows","push","key","scope","row","id","Table","name","YoutubeChannelLink","ScoreFootnotes","note","index","RESULTS_LABELS","first","second","third","ResultsRow","ResultsTable","ImageHeader","alt","publicURL","childImageSharp","fluid","src","defaultProps","ScorePage","pageContext","theme","useState","scores","nodes","flat","Layout","currentGame","navButtons","SEO","title","gameImage","query"],"mappings":"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","file":"component---src-templates-score-page-js-7fd2286456a8273f9640.js","sourcesContent":["import React, { useContext } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport SpoilerContext from \"../context/SpoilerContext\"\n\nconst SpoilerButton = () => {\n  const { showSpoilers, toggleSpoilers } = useContext(SpoilerContext)\n  return (\n    <Button variant=\"warning\" onClick={toggleSpoilers}>\n      {showSpoilers ? \"Hide\" : \"Show\"} Spoilers\n    </Button>\n  )\n}\n\nexport default SpoilerButton\n","import React from \"react\"\n\nconst YoutubeLink = ({ children, videoId }) => {\n  return videoId ? (\n    <a href={`https://www.youtube.com/watch?v=${videoId}`}>{children}</a>\n  ) : (\n    children\n  )\n}\n\nexport default YoutubeLink\n","import React, { useContext } from \"react\"\nimport SpoilerContext from \"../context/SpoilerContext\"\nimport YoutubeLink from \"./YoutubeLink\"\n\nconst Score = ({ day, allNotes }) => {\n  const { showSpoilers } = useContext(SpoilerContext)\n  const { place, score, youtube, notes } = day\n  const noteIndex = allNotes.findIndex(n => n === notes)\n\n  return (\n    <td>\n      <YoutubeLink videoId={youtube}>\n        {showSpoilers ? (\n          <span className={`comment ${place}`}>\n            {score || \"TBD\"}\n            {notes ? \" \" + \"*\".repeat(noteIndex + 1) : \"\"}\n          </span>\n        ) : (\n          <span>{youtube ? \"Watch\" : score ? \"Spoilers\" : \"TBD\"}</span>\n        )}\n      </YoutubeLink>\n    </td>\n  )\n}\n\nexport default Score\n","import React from \"react\"\n\nconst ViewsyncLink = ({ data, day }) => {\n  const youtubeLinks = data.map(node => node.days[day].youtube).filter(Boolean)\n\n  if (youtubeLinks.length > 1) {\n    return (\n      <a\n        href={`https://viewsync.net/watch?${youtubeLinks\n          .map(link => `v=${link}`)\n          .join(\"&\")}`}\n      >\n        {day + 1}\n      </a>\n    )\n  } else {\n    return day + 1\n  }\n}\n\nexport default ViewsyncLink\n","import React from \"react\"\nimport { Table } from \"react-bootstrap\"\n\nimport Score from \"./Score\"\nimport ViewsyncLink from \"./ViewsyncLink\"\nimport YoutubeChannelLink from \"./YoutubeChannelLink\"\n\nconst ScoreTable = ({ data, notes }) => {\n  let rows = []\n  for (let day = 0; day < 7; day++) {\n    rows.push(\n      <tr key={day}>\n        <th scope=\"row\">\n          <ViewsyncLink data={data} day={day} />\n        </th>\n        {data.map(row => (\n          <Score key={row.id} day={row.days[day]} allNotes={notes} />\n        ))}\n      </tr>\n    )\n  }\n\n  return (\n    <Table variant=\"dark\" className=\"results\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Viewsync</th>\n          {data.map(({ id, name }) => (\n            <th scope=\"col\" key={id}>\n              <YoutubeChannelLink name={name}>{name}</YoutubeChannelLink>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </Table>\n  )\n}\n\nexport default ScoreTable\n","import React from \"react\"\n\nconst ScoreFootnotes = ({ notes }) => (\n  <div id=\"footnote\">\n    {notes.map((note, index) => (\n      <div key={index}>\n        {\"*\".repeat(index + 1)} {note}\n      </div>\n    ))}\n  </div>\n)\n\nexport default ScoreFootnotes\n","import React, { useContext } from \"react\"\nimport SpoilerContext from \"../context/SpoilerContext\"\n\nconst RESULTS_LABELS = {\n  first: \"1st Finishes\",\n  second: \"2nd Finishes\",\n  third: \"3rd Finishes\",\n}\n\nconst ResultsRow = ({ data, place }) => {\n  const { showSpoilers } = useContext(SpoilerContext)\n  return (\n    <tr>\n      <th scope=\"row\">{RESULTS_LABELS[place]}</th>\n      {data.map(score => (\n        <td key={score.id} className={place}>\n          {showSpoilers\n            ? score.days.filter(day => day.place === place).length\n            : \"Spoilers\"}\n        </td>\n      ))}\n    </tr>\n  )\n}\n\nexport default ResultsRow\n","import React from \"react\"\nimport { Table } from \"react-bootstrap\"\nimport ResultsRow from \"./ResultsRow\"\n\nconst ResultsTable = ({ data }) => {\n  return (\n    <Table variant=\"dark\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Totals</th>\n          {data.map(score => (\n            <th scope=\"col\" key={score.id}>\n              {score.name}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <ResultsRow data={data} place=\"third\" />\n        <ResultsRow data={data} place=\"second\" />\n        <ResultsRow data={data} place=\"first\" />\n      </tbody>\n    </Table>\n  )\n}\n\nexport default ResultsTable\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nconst ImageHeader = ({ data, alt }) => {\n  const { publicURL, childImageSharp } = data\n\n  return (\n    <div className=\"mx-auto\">\n      {childImageSharp ? (\n        <Img fluid={childImageSharp.fluid} className=\"img-fluid\" alt={alt} />\n      ) : (\n        <img src={publicURL} className=\"img-fluid\" alt={alt} />\n      )}\n    </div>\n  )\n}\n\nImageHeader.defaultProps = {\n  alt: \"Game Logo\",\n}\n\nexport default ImageHeader\n","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport SpoilerButton from \"../components/SpoilerButton\"\nimport ScoreTable from \"../components/ScoreTable\"\nimport ScoreFootnotes from \"../components/ScoreFootnotes\"\nimport ResultsTable from \"../components/ResultsTable\"\nimport ImageHeader from \"../components/ImageHeader\"\n\nexport default function ScorePage({ data, pageContext }) {\n  const { theme, name } = pageContext\n  const [notes, setNotes] = useState(() =>\n    data.scores.nodes\n      .map(node => node.days.map(day => day.notes))\n      .flat()\n      .filter(Boolean)\n  )\n\n  return (\n    <Layout currentGame={name} theme={theme} navButtons={<SpoilerButton />}>\n      <SEO title={name} />\n      <ImageHeader data={data.gameImage} alt={`${name} Logo`} />\n      <h2 id=\"subtitle\" className=\"text-center text-nowrap\">\n        GOLDEN GOBLET\n      </h2>\n      <ScoreTable data={data.scores.nodes} notes={notes} />\n      <ResultsTable data={data.scores.nodes} />\n      <ScoreFootnotes notes={notes} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($image: String!, $week: String!) {\n    scores: allScoreCsv(\n      filter: { week: { eq: $week } }\n      sort: { fields: name, order: ASC }\n    ) {\n      nodes {\n        id\n        name\n        days {\n          score\n          place\n          youtube\n          notes\n        }\n      }\n    }\n    gameImage: file(relativePath: { eq: $image }) {\n      publicURL\n      childImageSharp {\n        fluid(maxWidth: 980) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}